{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rjgur\\\\Projects\\\\travelPicker\\\\travel-picker\\\\src\\\\index.js\";\n/* eslint-disable no-undef */\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { countryList } from './countries.js';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet map;\nlet marker;\nlet geocoder;\nlet responseDiv;\nlet response;\nfunction initMap() {\n  map = new google.maps.Map(document.getElementById(\"map\"), {\n    zoom: 8,\n    center: {\n      lat: -34.397,\n      lng: 150.644\n    },\n    mapTypeControl: false\n  });\n  geocoder = new google.maps.Geocoder();\n  const inputText = document.createElement(\"input\");\n  inputText.type = \"text\";\n  inputText.placeholder = \"Enter a location\";\n  const submitButton = document.createElement(\"input\");\n  submitButton.type = \"button\";\n  submitButton.value = \"Geocode\";\n  submitButton.classList.add(\"button\", \"button-primary\");\n  const clearButton = document.createElement(\"input\");\n  clearButton.type = \"button\";\n  clearButton.value = \"Clear\";\n  clearButton.classList.add(\"button\", \"button-secondary\");\n  response = document.createElement(\"pre\");\n  response.id = \"response\";\n  response.innerText = \"\";\n  responseDiv = document.createElement(\"div\");\n  responseDiv.id = \"response-container\";\n  responseDiv.appendChild(response);\n  const instructionsElement = document.createElement(\"p\");\n  instructionsElement.id = \"instructions\";\n  instructionsElement.innerHTML = \"<strong>Instructions</strong>: Enter an address in the textbox to geocode or click on the map to reverse geocode.\";\n  map.controls[google.maps.ControlPosition.TOP_LEFT].push(inputText);\n  map.controls[google.maps.ControlPosition.TOP_LEFT].push(submitButton);\n  map.controls[google.maps.ControlPosition.TOP_LEFT].push(clearButton);\n  map.controls[google.maps.ControlPosition.LEFT_TOP].push(instructionsElement);\n  map.controls[google.maps.ControlPosition.LEFT_TOP].push(responseDiv);\n  marker = new google.maps.Marker({\n    map\n  });\n  map.addListener(\"click\", e => {\n    geocode({\n      location: e.latLng\n    });\n  });\n  submitButton.addEventListener(\"click\", () => geocode({\n    address: inputText.value\n  }));\n  clearButton.addEventListener(\"click\", () => {\n    clear();\n  });\n  clear();\n}\nfunction clear() {\n  marker.setMap(null);\n  responseDiv.style.display = \"none\";\n}\nfunction geocode(request) {\n  clear();\n  geocoder.geocode(request).then(result => {\n    const {\n      results\n    } = result;\n    map.setCenter(results[0].geometry.location);\n    marker.setPosition(results[0].geometry.location);\n    marker.setMap(map);\n    responseDiv.style.display = \"block\";\n    response.innerText = JSON.stringify(result, null, 2);\n    return results;\n  }).catch(e => {\n    alert(\"Geocode was not successful for the following reason: \" + e);\n  });\n}\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(\"initMap\", {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 99,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","useState","ReactDOM","countryList","reportWebVitals","jsxDEV","_jsxDEV","map","marker","geocoder","responseDiv","response","initMap","google","maps","Map","document","getElementById","zoom","center","lat","lng","mapTypeControl","Geocoder","inputText","createElement","type","placeholder","submitButton","value","classList","add","clearButton","id","innerText","appendChild","instructionsElement","innerHTML","controls","ControlPosition","TOP_LEFT","push","LEFT_TOP","Marker","addListener","e","geocode","location","latLng","addEventListener","address","clear","setMap","style","display","request","then","result","results","setCenter","geometry","setPosition","JSON","stringify","catch","alert","root","createRoot","render","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/rjgur/Projects/travelPicker/travel-picker/src/index.js"],"sourcesContent":["/* eslint-disable no-undef */\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport {countryList} from './countries.js';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nlet map;\nlet marker;\nlet geocoder;\nlet responseDiv;\nlet response;\n\nfunction initMap() {\n  map = new google.maps.Map(document.getElementById(\"map\"), {\n    zoom: 8,\n    center: { lat: -34.397, lng: 150.644 },\n    mapTypeControl: false,\n  });\n  geocoder = new google.maps.Geocoder();\n\n  const inputText = document.createElement(\"input\");\n\n  inputText.type = \"text\";\n  inputText.placeholder = \"Enter a location\";\n\n  const submitButton = document.createElement(\"input\");\n\n  submitButton.type = \"button\";\n  submitButton.value = \"Geocode\";\n  submitButton.classList.add(\"button\", \"button-primary\");\n\n  const clearButton = document.createElement(\"input\");\n\n  clearButton.type = \"button\";\n  clearButton.value = \"Clear\";\n  clearButton.classList.add(\"button\", \"button-secondary\");\n  response = document.createElement(\"pre\");\n  response.id = \"response\";\n  response.innerText = \"\";\n  responseDiv = document.createElement(\"div\");\n  responseDiv.id = \"response-container\";\n  responseDiv.appendChild(response);\n\n  const instructionsElement = document.createElement(\"p\");\n\n  instructionsElement.id = \"instructions\";\n  instructionsElement.innerHTML =\n    \"<strong>Instructions</strong>: Enter an address in the textbox to geocode or click on the map to reverse geocode.\";\n  map.controls[google.maps.ControlPosition.TOP_LEFT].push(inputText);\n  map.controls[google.maps.ControlPosition.TOP_LEFT].push(submitButton);\n  map.controls[google.maps.ControlPosition.TOP_LEFT].push(clearButton);\n  map.controls[google.maps.ControlPosition.LEFT_TOP].push(instructionsElement);\n  map.controls[google.maps.ControlPosition.LEFT_TOP].push(responseDiv);\n  marker = new google.maps.Marker({\n    map,\n  });\n  map.addListener(\"click\", (e) => {\n    geocode({ location: e.latLng });\n  });\n  submitButton.addEventListener(\"click\", () =>\n    geocode({ address: inputText.value }),\n  );\n  clearButton.addEventListener(\"click\", () => {\n    clear();\n  });\n  clear();\n}\n\nfunction clear() {\n  marker.setMap(null);\n  responseDiv.style.display = \"none\";\n}\n\nfunction geocode(request) {\n  clear();\n  geocoder\n    .geocode(request)\n    .then((result) => {\n      const { results } = result;\n\n      map.setCenter(results[0].geometry.location);\n      marker.setPosition(results[0].geometry.location);\n      marker.setMap(map);\n      responseDiv.style.display = \"block\";\n      response.innerText = JSON.stringify(result, null, 2);\n      return results;\n    })\n    .catch((e) => {\n      alert(\"Geocode was not successful for the following reason: \" + e);\n    });\n}\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <initMap />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,SAAQC,WAAW,QAAO,gBAAgB;AAC1C;AACA,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,IAAIC,GAAG;AACP,IAAIC,MAAM;AACV,IAAIC,QAAQ;AACZ,IAAIC,WAAW;AACf,IAAIC,QAAQ;AAEZ,SAASC,OAAOA,CAAA,EAAG;EACjBL,GAAG,GAAG,IAAIM,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,EAAE;IACxDC,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE;MAAEC,GAAG,EAAE,CAAC,MAAM;MAAEC,GAAG,EAAE;IAAQ,CAAC;IACtCC,cAAc,EAAE;EAClB,CAAC,CAAC;EACFb,QAAQ,GAAG,IAAII,MAAM,CAACC,IAAI,CAACS,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAGR,QAAQ,CAACS,aAAa,CAAC,OAAO,CAAC;EAEjDD,SAAS,CAACE,IAAI,GAAG,MAAM;EACvBF,SAAS,CAACG,WAAW,GAAG,kBAAkB;EAE1C,MAAMC,YAAY,GAAGZ,QAAQ,CAACS,aAAa,CAAC,OAAO,CAAC;EAEpDG,YAAY,CAACF,IAAI,GAAG,QAAQ;EAC5BE,YAAY,CAACC,KAAK,GAAG,SAAS;EAC9BD,YAAY,CAACE,SAAS,CAACC,GAAG,CAAC,QAAQ,EAAE,gBAAgB,CAAC;EAEtD,MAAMC,WAAW,GAAGhB,QAAQ,CAACS,aAAa,CAAC,OAAO,CAAC;EAEnDO,WAAW,CAACN,IAAI,GAAG,QAAQ;EAC3BM,WAAW,CAACH,KAAK,GAAG,OAAO;EAC3BG,WAAW,CAACF,SAAS,CAACC,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC;EACvDpB,QAAQ,GAAGK,QAAQ,CAACS,aAAa,CAAC,KAAK,CAAC;EACxCd,QAAQ,CAACsB,EAAE,GAAG,UAAU;EACxBtB,QAAQ,CAACuB,SAAS,GAAG,EAAE;EACvBxB,WAAW,GAAGM,QAAQ,CAACS,aAAa,CAAC,KAAK,CAAC;EAC3Cf,WAAW,CAACuB,EAAE,GAAG,oBAAoB;EACrCvB,WAAW,CAACyB,WAAW,CAACxB,QAAQ,CAAC;EAEjC,MAAMyB,mBAAmB,GAAGpB,QAAQ,CAACS,aAAa,CAAC,GAAG,CAAC;EAEvDW,mBAAmB,CAACH,EAAE,GAAG,cAAc;EACvCG,mBAAmB,CAACC,SAAS,GAC3B,mHAAmH;EACrH9B,GAAG,CAAC+B,QAAQ,CAACzB,MAAM,CAACC,IAAI,CAACyB,eAAe,CAACC,QAAQ,CAAC,CAACC,IAAI,CAACjB,SAAS,CAAC;EAClEjB,GAAG,CAAC+B,QAAQ,CAACzB,MAAM,CAACC,IAAI,CAACyB,eAAe,CAACC,QAAQ,CAAC,CAACC,IAAI,CAACb,YAAY,CAAC;EACrErB,GAAG,CAAC+B,QAAQ,CAACzB,MAAM,CAACC,IAAI,CAACyB,eAAe,CAACC,QAAQ,CAAC,CAACC,IAAI,CAACT,WAAW,CAAC;EACpEzB,GAAG,CAAC+B,QAAQ,CAACzB,MAAM,CAACC,IAAI,CAACyB,eAAe,CAACG,QAAQ,CAAC,CAACD,IAAI,CAACL,mBAAmB,CAAC;EAC5E7B,GAAG,CAAC+B,QAAQ,CAACzB,MAAM,CAACC,IAAI,CAACyB,eAAe,CAACG,QAAQ,CAAC,CAACD,IAAI,CAAC/B,WAAW,CAAC;EACpEF,MAAM,GAAG,IAAIK,MAAM,CAACC,IAAI,CAAC6B,MAAM,CAAC;IAC9BpC;EACF,CAAC,CAAC;EACFA,GAAG,CAACqC,WAAW,CAAC,OAAO,EAAGC,CAAC,IAAK;IAC9BC,OAAO,CAAC;MAAEC,QAAQ,EAAEF,CAAC,CAACG;IAAO,CAAC,CAAC;EACjC,CAAC,CAAC;EACFpB,YAAY,CAACqB,gBAAgB,CAAC,OAAO,EAAE,MACrCH,OAAO,CAAC;IAAEI,OAAO,EAAE1B,SAAS,CAACK;EAAM,CAAC,CACtC,CAAC;EACDG,WAAW,CAACiB,gBAAgB,CAAC,OAAO,EAAE,MAAM;IAC1CE,KAAK,CAAC,CAAC;EACT,CAAC,CAAC;EACFA,KAAK,CAAC,CAAC;AACT;AAEA,SAASA,KAAKA,CAAA,EAAG;EACf3C,MAAM,CAAC4C,MAAM,CAAC,IAAI,CAAC;EACnB1C,WAAW,CAAC2C,KAAK,CAACC,OAAO,GAAG,MAAM;AACpC;AAEA,SAASR,OAAOA,CAACS,OAAO,EAAE;EACxBJ,KAAK,CAAC,CAAC;EACP1C,QAAQ,CACLqC,OAAO,CAACS,OAAO,CAAC,CAChBC,IAAI,CAAEC,MAAM,IAAK;IAChB,MAAM;MAAEC;IAAQ,CAAC,GAAGD,MAAM;IAE1BlD,GAAG,CAACoD,SAAS,CAACD,OAAO,CAAC,CAAC,CAAC,CAACE,QAAQ,CAACb,QAAQ,CAAC;IAC3CvC,MAAM,CAACqD,WAAW,CAACH,OAAO,CAAC,CAAC,CAAC,CAACE,QAAQ,CAACb,QAAQ,CAAC;IAChDvC,MAAM,CAAC4C,MAAM,CAAC7C,GAAG,CAAC;IAClBG,WAAW,CAAC2C,KAAK,CAACC,OAAO,GAAG,OAAO;IACnC3C,QAAQ,CAACuB,SAAS,GAAG4B,IAAI,CAACC,SAAS,CAACN,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IACpD,OAAOC,OAAO;EAChB,CAAC,CAAC,CACDM,KAAK,CAAEnB,CAAC,IAAK;IACZoB,KAAK,CAAC,uDAAuD,GAAGpB,CAAC,CAAC;EACpE,CAAC,CAAC;AACN;AAIA,MAAMqB,IAAI,GAAGhE,QAAQ,CAACiE,UAAU,CAACnD,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEiD,IAAI,CAACE,MAAM,eACT9D,OAAA;EAAA+D,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAU,CACZ,CAAC;;AAED;AACA;AACA;AACApE,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}