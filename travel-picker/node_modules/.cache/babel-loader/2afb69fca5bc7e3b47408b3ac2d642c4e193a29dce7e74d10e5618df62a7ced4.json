{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rjgur\\\\Projects\\\\travelPicker\\\\travel-picker\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { countryList } from './countries.js';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  var _s = $RefreshSig$();\n  var country = \"United States\";\n  var selectCountry;\n  const google = window.google;\n  var geocoder = new google.maps.Geocoder();\n  var lat = \"0.0\";\n  var long = \"0.0\";\n  let map;\n  async function initMap() {\n    const {\n      Map\n    } = await google.maps.importLibrary(\"maps\");\n    map = new Map(document.getElementById(\"map\"), {\n      center: {\n        lat: -34.397,\n        lng: 150.644\n      },\n      zoom: 8\n    });\n  }\n  initMap();\n  function MapDisplay() {\n    geocoder.geocode({\n      'address': country\n    }, function (results, status) {\n      if (status == google.maps.GeocoderStatus.OK) {\n        console.log(results[0].geometry.location);\n        //map.setCenter(results[0].geometry.location);\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"1200\",\n        height: \"900\"\n        //style=\"border:0\"\n        //key=\"AIzaSyBz0QsIYpZo3ZJJIj-vQ0PktTGFM5vwTkM\"\n        ,\n        loading: \"lazy\",\n        allowfullscreen: true,\n        referrerpolicy: \"no-referrer-when-downgrade\",\n        src: \"https://www.google.com/maps/embed/v1/place?key= AIzaSyBz0QsIYpZo3ZJJIj-vQ0PktTGFM5vwTkM &ll=40.7127, -74.0059\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n  function SelectCountry() {\n    _s();\n    [country, selectCountry] = useState(\"Select a Country\");\n    let handleCountryChange = e => {\n      selectCountry(e.target.value);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [country, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleCountryChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Select a Country\",\n          children: \" -- Select a Country -- \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), countryList.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country,\n          children: country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 41\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);\n  }\n  _s(SelectCountry, \"a3M9y74j5JczzZpYiUhpqlgj4OQ=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MapDisplay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectCountry, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n//export default App;\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 91,\n  columnNumber: 3\n}, this));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n// root.render(\n//   <MapDisplay />\n//   <SelectCountry />\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","countryList","reportWebVitals","jsxDEV","_jsxDEV","App","_s","$RefreshSig$","country","selectCountry","google","window","geocoder","maps","Geocoder","lat","long","map","initMap","Map","importLibrary","document","getElementById","center","lng","zoom","MapDisplay","geocode","results","status","GeocoderStatus","OK","console","log","geometry","location","children","width","height","loading","allowfullscreen","referrerpolicy","src","fileName","_jsxFileName","lineNumber","columnNumber","SelectCountry","handleCountryChange","e","target","value","className","onChange","_c","root","createRoot","render","$RefreshReg$"],"sources":["C:/Users/rjgur/Projects/travelPicker/travel-picker/src/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport {countryList} from './countries.js';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nfunction App() {\n  var country = \"United States\";\n  var selectCountry;\n  const google = window.google;\n  var geocoder = new google.maps.Geocoder();\n  var lat = \"0.0\";\n  var long = \"0.0\";\n\n  let map;\n\nasync function initMap() {\n  const { Map } = await google.maps.importLibrary(\"maps\");\n\n  map = new Map(document.getElementById(\"map\"), {\n    center: { lat: -34.397, lng: 150.644 },\n    zoom: 8,\n  });\n}\n\ninitMap();\n\n  function MapDisplay() {\n    geocoder.geocode( {'address' : country}, function(results, status) {\n      if (status == google.maps.GeocoderStatus.OK) {\n        console.log(results[0].geometry.location);\n      //map.setCenter(results[0].geometry.location);\n          }\n      });\n    return(         \n      <div>          \n        <iframe\n          width=\"1200\"\n          height=\"900\"\n          //style=\"border:0\"\n          //key=\"AIzaSyBz0QsIYpZo3ZJJIj-vQ0PktTGFM5vwTkM\"\n          loading=\"lazy\"\n          allowfullscreen\n          referrerpolicy=\"no-referrer-when-downgrade\"\n          src=\"https://www.google.com/maps/embed/v1/place?key=\n          AIzaSyBz0QsIYpZo3ZJJIj-vQ0PktTGFM5vwTkM\n          &ll=40.7127, -74.0059\">\n        </iframe>        \n      </div>\n    );\n  }\n  \n  function SelectCountry() {\n    [country, selectCountry] = useState(\"Select a Country\");\n  \n    let handleCountryChange = (e) => {\n      selectCountry(e.target.value)\n    }\n    \n      return (\n        <div className=\"App\">\n        {/* Displaying the value of country */}\n        {country}\n        <br />\n    \n        <select onChange={handleCountryChange}> \n          <option value=\"Select a Country\"> -- Select a Country -- </option>\n                {/* Mapping through each country object in our countries array\n              and returning an option element with the appropriate attributes / values.\n             */}\n          {countryList.map((country) => <option value={country}>{country}</option>)}\n        </select>\n        </div>\n      );\n  }\n\n  return(\n    <div>\n      <MapDisplay />\n      <SelectCountry />\n      </div>\n  );\n}\n//export default App;\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />\n);\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n// root.render(\n//   <MapDisplay />\n//   <SelectCountry />\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,SAAQC,WAAW,QAAO,gBAAgB;AAC1C;AACA,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,GAAGA,CAAA,EAAG;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACb,IAAIC,OAAO,GAAG,eAAe;EAC7B,IAAIC,aAAa;EACjB,MAAMC,MAAM,GAAGC,MAAM,CAACD,MAAM;EAC5B,IAAIE,QAAQ,GAAG,IAAIF,MAAM,CAACG,IAAI,CAACC,QAAQ,CAAC,CAAC;EACzC,IAAIC,GAAG,GAAG,KAAK;EACf,IAAIC,IAAI,GAAG,KAAK;EAEhB,IAAIC,GAAG;EAET,eAAeC,OAAOA,CAAA,EAAG;IACvB,MAAM;MAAEC;IAAI,CAAC,GAAG,MAAMT,MAAM,CAACG,IAAI,CAACO,aAAa,CAAC,MAAM,CAAC;IAEvDH,GAAG,GAAG,IAAIE,GAAG,CAACE,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,EAAE;MAC5CC,MAAM,EAAE;QAAER,GAAG,EAAE,CAAC,MAAM;QAAES,GAAG,EAAE;MAAQ,CAAC;MACtCC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;EAEAP,OAAO,CAAC,CAAC;EAEP,SAASQ,UAAUA,CAAA,EAAG;IACpBd,QAAQ,CAACe,OAAO,CAAE;MAAC,SAAS,EAAGnB;IAAO,CAAC,EAAE,UAASoB,OAAO,EAAEC,MAAM,EAAE;MACjE,IAAIA,MAAM,IAAInB,MAAM,CAACG,IAAI,CAACiB,cAAc,CAACC,EAAE,EAAE;QAC3CC,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC,CAAC,CAAC,CAACM,QAAQ,CAACC,QAAQ,CAAC;QAC3C;MACI;IACJ,CAAC,CAAC;IACJ,oBACE/B,OAAA;MAAAgC,QAAA,eACEhC,OAAA;QACEiC,KAAK,EAAC,MAAM;QACZC,MAAM,EAAC;QACP;QACA;QAAA;QACAC,OAAO,EAAC,MAAM;QACdC,eAAe;QACfC,cAAc,EAAC,4BAA4B;QAC3CC,GAAG,EAAC;MAEkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;EAEA,SAASC,aAAaA,CAAA,EAAG;IAAAzC,EAAA;IACvB,CAACE,OAAO,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,kBAAkB,CAAC;IAEvD,IAAIiD,mBAAmB,GAAIC,CAAC,IAAK;MAC/BxC,aAAa,CAACwC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC/B,CAAC;IAEC,oBACE/C,OAAA;MAAKgD,SAAS,EAAC,KAAK;MAAAhB,QAAA,GAEnB5B,OAAO,eACRJ,OAAA;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEN1C,OAAA;QAAQiD,QAAQ,EAAEL,mBAAoB;QAAAZ,QAAA,gBACpChC,OAAA;UAAQ+C,KAAK,EAAC,kBAAkB;UAAAf,QAAA,EAAC;QAAwB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAIjE7C,WAAW,CAACgB,GAAG,CAAET,OAAO,iBAAKJ,OAAA;UAAQ+C,KAAK,EAAE3C,OAAQ;UAAA4B,QAAA,EAAE5B;QAAO;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAEZ;EAACxC,EAAA,CAtBQyC,aAAa;EAwBtB,oBACE3C,OAAA;IAAAgC,QAAA,gBACEhC,OAAA,CAACsB,UAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACd1C,OAAA,CAAC2C,aAAa;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEZ;AACA;AAAAQ,EAAA,GA7ESjD,GAAG;AAiFZ,MAAMkD,IAAI,GAAGvD,QAAQ,CAACwD,UAAU,CAACnC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEiC,IAAI,CAACE,MAAM,eACTrD,OAAA,CAACC,GAAG;EAAAsC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CACR,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA5C,eAAe,CAAC,CAAC;AAAC,IAAAoD,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}