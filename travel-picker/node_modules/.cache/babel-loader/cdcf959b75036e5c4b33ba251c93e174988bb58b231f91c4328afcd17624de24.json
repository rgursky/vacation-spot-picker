{"ast":null,"code":"/* eslint-disable no-undef */\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { countryList } from './countries.js';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\nlet map;\nlet marker;\nlet geocoder;\nlet responseDiv;\nlet response;\nlet resultScreen;\nlet resultScreenDiv;\nlet restartButton;\nlet currentPerson = [];\nlet allPersons = [[]];\nfunction initMap() {\n  map = new google.maps.Map(document.getElementById(\"map\"), {\n    zoom: 3,\n    center: {\n      lat: 0,\n      lng: 0\n    },\n    mapTypeControl: false\n  });\n  geocoder = new google.maps.Geocoder();\n  const inputText = document.createElement(\"input\");\n  inputText.type = \"text\";\n  inputText.id = \"input-text\";\n  inputText.placeholder = \"Enter a location\";\n  const submitButton = document.createElement(\"input\");\n  submitButton.type = \"button\";\n  submitButton.value = \"Geocode\";\n  submitButton.classList.add(\"button\", \"button-primary\");\n  const clearButton = document.createElement(\"input\");\n  clearButton.type = \"button\";\n  clearButton.value = \"Clear\";\n  clearButton.classList.add(\"button\", \"button-secondary\");\n  const addButton = document.createElement(\"input\");\n  addButton.type = \"button\";\n  addButton.value = \"Add to List\";\n  addButton.classList.add(\"button\", \"button-final\");\n  const nextButton = document.createElement(\"input\");\n  nextButton.type = \"button\";\n  nextButton.value = \"Next Person\";\n  nextButton.classList.add(\"button\", \"button-next\");\n  const doneButton = document.createElement(\"input\");\n  doneButton.type = \"button\";\n  doneButton.value = \"All Done!\";\n  doneButton.classList.add(\"button\", \"button-done\");\n  const restartButton = document.createElement(\"input\");\n  restartButton.type = \"button\";\n  restartButton.value = \"Want to Pick Again?\";\n  restartButton.classList.add(\"button\", \"button-restart\");\n  response = document.createElement(\"pre\");\n  response.id = \"response\";\n  response.innerText = \"\";\n  responseDiv = document.createElement(\"div\");\n  responseDiv.id = \"response-container\";\n  responseDiv.appendChild(response);\n  resultScreen = document.createElement(\"pre\");\n  resultScreen.id = \"response-screen\";\n  resultScreen.innerText = \"\";\n  resultScreenDiv = document.createElement(\"div\");\n  resultScreenDiv.id = \"response-screen-container\";\n  resultScreenDiv.appendChild(resultScreen);\n  const instructionsElement = document.createElement(\"p\");\n  instructionsElement.id = \"instructions\";\n  instructionsElement.innerHTML = \"<strong>Instructions</strong>: Enter an address in the textbox to geocode or click on the map to reverse geocode.\";\n  map.controls[google.maps.ControlPosition.TOP_LEFT].push(inputText);\n  map.controls[google.maps.ControlPosition.TOP_LEFT].push(submitButton);\n  map.controls[google.maps.ControlPosition.TOP_LEFT].push(clearButton);\n  map.controls[google.maps.ControlPosition.TOP_LEFT].push(addButton);\n  map.controls[google.maps.ControlPosition.TOP_LEFT].push(nextButton);\n  map.controls[google.maps.ControlPosition.TOP_LEFT].push(doneButton);\n  map.controls[google.maps.ControlPosition.LEFT_TOP].push(instructionsElement);\n  map.controls[google.maps.ControlPosition.LEFT_TOP].push(responseDiv);\n  marker = new google.maps.Marker({\n    map\n  });\n  map.addListener(\"click\", e => {\n    geocode({\n      location: e.latLng\n    });\n  });\n  submitButton.addEventListener(\"click\", () => geocode({\n    address: inputText.value\n  }));\n  addButton.addEventListener(\"click\", () => addToList());\n  nextButton.addEventListener(\"click\", () => nextPerson());\n  doneButton.addEventListener(\"click\", () => allDone());\n  restartButton.addEventListener(\"click\", () => restart());\n  clearButton.addEventListener(\"click\", () => {\n    clear();\n  });\n  clear();\n}\nfunction clear() {\n  marker.setMap(null);\n  responseDiv.style.display = \"none\";\n}\nfunction geocode(request) {\n  clear();\n  geocoder.geocode(request).then(result => {\n    const {\n      results\n    } = result;\n    map.setCenter(results[0].geometry.location);\n    marker.setPosition(results[0].geometry.location);\n    marker.setMap(map);\n    for (var i = 0; i < results.length; i++) {\n      for (var j = 0; j < results[i]['address_components'].length; j++) {\n        if (results[i]['address_components'][j]['types'][0] == \"country\" && results[i]['address_components'][j]['types'][1] == \"political\") {\n          document.getElementById(\"input-text\").value = results[i]['address_components'][j]['long_name'];\n        }\n      }\n    }\n    //responseDiv.style.display = \"block\";\n    //response.innerText = JSON.stringify(result, null, 2);\n    return results;\n  }).catch(e => {\n    alert(\"Geocode was not successful for the following reason: \" + e);\n  });\n}\nfunction addToList() {\n  // Add from the input box a country or typed in city to visit\n  let place = document.getElementById(\"input-text\").value;\n  if (!currentPerson.includes(place)) {\n    currentPerson.push(place);\n  }\n}\nfunction nextPerson() {\n  // Add the current places array to the total array and continue\n  allPersons.push(currentPerson);\n  currentPerson = [];\n}\nfunction allDone() {\n  // Check what places are the same across all people and display them\n  var mathcingPlaces = [];\n  var closePlaces = [];\n  var counts = {};\n  let resultText;\n  for (var i = 0; i < allPersons.length; i++) {\n    for (var j = 0; j < allPersons[i].length; j++) {\n      var place = allPersons[i][j];\n      counts[place] = counts[place] ? counts[place] + 1 : 1;\n    }\n  }\n  for (var place in keys(counts)) {\n    if (counts[place] == allPersons.length) {\n      mathcingPlaces.push[place];\n    } else if (counts[place] > allPersons.length / 2) {\n      closePlaces.push[place];\n    }\n  }\n  if (mathcingPlaces.length < 1) {\n    if (closePlaces.length < 1) {\n      resultText = \"Sorry, no places were even a close match! You might have to talk this one out :D\";\n    } else {\n      resultText = \"We didn't have any exact matches, but here are some places that came close! \" + closePlaces;\n    }\n  } else {\n    resultText = \"Here's some places you all want to go! \" + mathcingPlaces;\n  }\n  map.controls[google.maps.ControlPosition.CENTER].push(resultScreenDiv);\n  map.controls[google.maps.ControlPosition.CENTER].push(restartButton);\n}\nwindow.initMap = initMap;\nreportWebVitals();","map":{"version":3,"names":["React","useState","ReactDOM","countryList","reportWebVitals","map","marker","geocoder","responseDiv","response","resultScreen","resultScreenDiv","restartButton","currentPerson","allPersons","initMap","google","maps","Map","document","getElementById","zoom","center","lat","lng","mapTypeControl","Geocoder","inputText","createElement","type","id","placeholder","submitButton","value","classList","add","clearButton","addButton","nextButton","doneButton","innerText","appendChild","instructionsElement","innerHTML","controls","ControlPosition","TOP_LEFT","push","LEFT_TOP","Marker","addListener","e","geocode","location","latLng","addEventListener","address","addToList","nextPerson","allDone","restart","clear","setMap","style","display","request","then","result","results","setCenter","geometry","setPosition","i","length","j","catch","alert","place","includes","mathcingPlaces","closePlaces","counts","resultText","keys","CENTER","window"],"sources":["C:/Users/rjgur/Projects/travelPicker/travel-picker/src/index.js"],"sourcesContent":["/* eslint-disable no-undef */\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport {countryList} from './countries.js';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nlet map;\nlet marker;\nlet geocoder;\nlet responseDiv;\nlet response;\nlet resultScreen;\nlet resultScreenDiv;\nlet restartButton;\nlet currentPerson = [];\nlet allPersons = [[]];\n\nfunction initMap() {\n  map = new google.maps.Map(document.getElementById(\"map\"), {\n    zoom: 3,\n    center: { lat: 0, lng: 0 },\n    mapTypeControl: false,\n  });\n  geocoder = new google.maps.Geocoder();\n\n  const inputText = document.createElement(\"input\");\n\n  inputText.type = \"text\";\n  inputText.id = \"input-text\";\n  inputText.placeholder = \"Enter a location\";\n\n  const submitButton = document.createElement(\"input\");\n\n  submitButton.type = \"button\";\n  submitButton.value = \"Geocode\";\n  submitButton.classList.add(\"button\", \"button-primary\");\n\n  const clearButton = document.createElement(\"input\");\n\n  clearButton.type = \"button\";\n  clearButton.value = \"Clear\";\n  clearButton.classList.add(\"button\", \"button-secondary\");\n\n  const addButton = document.createElement(\"input\");\n\n  addButton.type = \"button\";\n  addButton.value = \"Add to List\";\n  addButton.classList.add(\"button\", \"button-final\");\n\n  const nextButton = document.createElement(\"input\");\n\n  nextButton.type = \"button\";\n  nextButton.value = \"Next Person\";\n  nextButton.classList.add(\"button\", \"button-next\");\n\n  const doneButton = document.createElement(\"input\");\n\n  doneButton.type = \"button\";\n  doneButton.value = \"All Done!\";\n  doneButton.classList.add(\"button\", \"button-done\");\n\n  const restartButton = document.createElement(\"input\");\n\n  restartButton.type = \"button\";\n  restartButton.value = \"Want to Pick Again?\";\n  restartButton.classList.add(\"button\", \"button-restart\");\n\n  response = document.createElement(\"pre\");\n  response.id = \"response\";\n  response.innerText = \"\";\n  responseDiv = document.createElement(\"div\");\n  responseDiv.id = \"response-container\";\n  responseDiv.appendChild(response);\n\n  resultScreen = document.createElement(\"pre\");\n  resultScreen.id = \"response-screen\";\n  resultScreen.innerText = \"\";\n  resultScreenDiv = document.createElement(\"div\");\n  resultScreenDiv.id = \"response-screen-container\";\n  resultScreenDiv.appendChild(resultScreen);\n\n  const instructionsElement = document.createElement(\"p\");\n\n  instructionsElement.id = \"instructions\";\n  instructionsElement.innerHTML =\n    \"<strong>Instructions</strong>: Enter an address in the textbox to geocode or click on the map to reverse geocode.\";\n  map.controls[google.maps.ControlPosition.TOP_LEFT].push(inputText);\n  map.controls[google.maps.ControlPosition.TOP_LEFT].push(submitButton);\n  map.controls[google.maps.ControlPosition.TOP_LEFT].push(clearButton);\n  map.controls[google.maps.ControlPosition.TOP_LEFT].push(addButton);\n  map.controls[google.maps.ControlPosition.TOP_LEFT].push(nextButton);\n  map.controls[google.maps.ControlPosition.TOP_LEFT].push(doneButton);\n  map.controls[google.maps.ControlPosition.LEFT_TOP].push(instructionsElement);\n  map.controls[google.maps.ControlPosition.LEFT_TOP].push(responseDiv);\n  marker = new google.maps.Marker({\n    map,\n  });\n  map.addListener(\"click\", (e) => {\n    geocode({ location: e.latLng });\n  });\n  submitButton.addEventListener(\"click\", () =>\n    geocode({ address: inputText.value }),\n  );\n  addButton.addEventListener(\"click\", () =>\n    addToList(),\n  );\n  nextButton.addEventListener(\"click\", () =>\n    nextPerson(),\n  );\n  doneButton.addEventListener(\"click\", () =>\n    allDone(),\n  );\n  restartButton.addEventListener(\"click\", () =>\n    restart(),\n  );\n  clearButton.addEventListener(\"click\", () => {\n    clear();\n  });\n  clear();\n}\n\nfunction clear() {\n  marker.setMap(null);\n  responseDiv.style.display = \"none\";\n}\n\nfunction geocode(request) {\n  clear();\n  geocoder\n    .geocode(request)\n    .then((result) => {\n      const { results } = result;\n\n      map.setCenter(results[0].geometry.location);\n      marker.setPosition(results[0].geometry.location);\n      marker.setMap(map);\n\n      for (var i = 0; i < results.length; i++) {\n        for (var j = 0; j < results[i]['address_components'].length; j++) {\n          if (results[i]['address_components'][j]['types'][0] == \"country\" && results[i]['address_components'][j]['types'][1] == \"political\") {\n            document.getElementById(\"input-text\").value = results[i]['address_components'][j]['long_name'];\n          }\n        }\n      }\n      //responseDiv.style.display = \"block\";\n      //response.innerText = JSON.stringify(result, null, 2);\n      return results;\n    })\n    .catch((e) => {\n      alert(\"Geocode was not successful for the following reason: \" + e);\n    });\n}\n\nfunction addToList() {\n  // Add from the input box a country or typed in city to visit\n  let place = document.getElementById(\"input-text\").value;\n  if (!currentPerson.includes(place)) {\n    currentPerson.push(place);\n  }\n}\n\nfunction nextPerson() {\n  // Add the current places array to the total array and continue\n  allPersons.push(currentPerson);\n  currentPerson = [];\n}\n\nfunction allDone() {\n  // Check what places are the same across all people and display them\n  var mathcingPlaces = [];\n  var closePlaces = [];\n  var counts = {};\n  let resultText;\n\n  for (var i = 0; i < allPersons.length; i++) {\n    for (var j = 0; j < allPersons[i].length; j++) {\n      var place = allPersons[i][j];\n      counts[place] = counts[place] ? counts[place] + 1 : 1;\n    }\n  }\n  for (var place in keys(counts)) {\n    if (counts[place] == allPersons.length) {\n      mathcingPlaces.push[place];\n    }\n    else if (counts[place] > allPersons.length / 2) {\n      closePlaces.push[place];\n    }\n  }\n\n  if (mathcingPlaces.length < 1) {\n    if (closePlaces.length < 1) {\n      resultText = \"Sorry, no places were even a close match! You might have to talk this one out :D\";\n    } else {\n      resultText = \"We didn't have any exact matches, but here are some places that came close! \" + closePlaces;\n    }\n  } else {\n    resultText = \"Here's some places you all want to go! \" + mathcingPlaces;\n  }\n\n  map.controls[google.maps.ControlPosition.CENTER].push(resultScreenDiv);\n  map.controls[google.maps.ControlPosition.CENTER].push(restartButton);\n}\n\nwindow.initMap = initMap;\n\nreportWebVitals();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}