{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rjgur\\\\Projects\\\\travelPicker\\\\travel-picker\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { countryList } from './countries.js';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet map;\nlet marker;\nlet geocoder;\nlet responseDiv;\nlet response;\n/*#__PURE__*/_jsxDEV(\"script\", {\n  type: \"text/javascript\",\n  src: \"http://maps.googleapis.com/maps/api/js?v=3&sensor=true\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 1\n}, this);\nfunction App() {\n  var _s = $RefreshSig$();\n  var country = \"United States\";\n  var selectCountry;\n  //var geocoder = new google.maps.Geocoder();\n  var lat = \"0.0\";\n  var long = \"0.0\";\n  function initMap() {\n    map = new google.maps.Map(document.getElementById(\"map\"), {\n      zoom: 8,\n      center: {\n        lat: -34.397,\n        lng: 150.644\n      },\n      mapTypeControl: false\n    });\n    geocoder = new google.maps.Geocoder();\n  }\n  initMap();\n  function MapDisplay() {\n    //geocoder.geocode( {'address' : country}, function(results, status) {\n    //if (status == google.maps.GeocoderStatus.OK) {\n    //console.log(results[0].geometry.location);\n    //map.setCenter(results[0].geometry.location);\n    //     }\n    //});\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n  function SelectCountry() {\n    _s();\n    [country, selectCountry] = useState(\"Select a Country\");\n    let handleCountryChange = e => {\n      selectCountry(e.target.value);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [country, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleCountryChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Select a Country\",\n          children: \" -- Select a Country -- \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), countryList.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country,\n          children: country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 41\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this);\n  }\n  _s(SelectCountry, \"a3M9y74j5JczzZpYiUhpqlgj4OQ=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MapDisplay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectCountry, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n//export default App;\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 96,\n  columnNumber: 3\n}, this));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n// root.render(\n//   <MapDisplay />\n//   <SelectCountry />\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","countryList","reportWebVitals","jsxDEV","_jsxDEV","map","marker","geocoder","responseDiv","response","type","src","fileName","_jsxFileName","lineNumber","columnNumber","App","_s","$RefreshSig$","country","selectCountry","lat","long","initMap","google","maps","Map","document","getElementById","zoom","center","lng","mapTypeControl","Geocoder","MapDisplay","SelectCountry","handleCountryChange","e","target","value","className","children","onChange","_c","root","createRoot","render","$RefreshReg$"],"sources":["C:/Users/rjgur/Projects/travelPicker/travel-picker/src/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport {countryList} from './countries.js';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nlet map;\nlet marker;\nlet geocoder;\nlet responseDiv;\nlet response;\n\n<script type=\"text/javascript\" src=\"http://maps.googleapis.com/maps/api/js?v=3&sensor=true\"></script>\n\nfunction App() {\n  var country = \"United States\";\n  var selectCountry;\n  //var geocoder = new google.maps.Geocoder();\n  var lat = \"0.0\";\n  var long = \"0.0\";\n  \n  function initMap() {\n    map = new google.maps.Map(document.getElementById(\"map\"), {\n      zoom: 8,\n      center: { lat: -34.397, lng: 150.644 },\n      mapTypeControl: false,\n    });\n    geocoder = new google.maps.Geocoder();\n  }\n\ninitMap();\n\n  function MapDisplay() {\n    //geocoder.geocode( {'address' : country}, function(results, status) {\n      //if (status == google.maps.GeocoderStatus.OK) {\n        //console.log(results[0].geometry.location);\n      //map.setCenter(results[0].geometry.location);\n     //     }\n      //});\n    return(         \n      <div>          \n        {/* <iframe\n          width=\"1200\"\n          height=\"900\"\n          //style=\"border:0\"\n          //key=\"AIzaSyBz0QsIYpZo3ZJJIj-vQ0PktTGFM5vwTkM\"\n          loading=\"lazy\"\n          allowfullscreen\n          referrerpolicy=\"no-referrer-when-downgrade\"\n          src=\"https://www.google.com/maps/embed/v1/place?key=\n          AIzaSyBz0QsIYpZo3ZJJIj-vQ0PktTGFM5vwTkM\n          &ll=40.7127, -74.0059\">\n        </iframe>         */}\n      </div>\n    );\n  }\n  \n  function SelectCountry() {\n    [country, selectCountry] = useState(\"Select a Country\");\n  \n    let handleCountryChange = (e) => {\n      selectCountry(e.target.value)\n    }\n    \n      return (\n        <div className=\"App\">\n        {/* Displaying the value of country */}\n        {country}\n        <br />\n    \n        <select onChange={handleCountryChange}> \n          <option value=\"Select a Country\"> -- Select a Country -- </option>\n                {/* Mapping through each country object in our countries array\n              and returning an option element with the appropriate attributes / values.\n             */}\n          {countryList.map((country) => <option value={country}>{country}</option>)}\n        </select>\n        </div>\n      );\n  }\n\n  return(\n    <div>\n      <MapDisplay />\n      <SelectCountry />\n      </div>\n  );\n}\n//export default App;\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />\n);\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n// root.render(\n//   <MapDisplay />\n//   <SelectCountry />\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}